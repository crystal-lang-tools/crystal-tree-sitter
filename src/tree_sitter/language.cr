require "semantic_version"

module TreeSitter
  # A `Language` defines how to parse a particular programming language. The code for each `Language`
  # is generated by Tree-sitter. Many languages are already available in separate git repositories
  # within the the [Tree-sitter GitHub organization](https://github.com/tree-sitter).
  class Language
    @lang : LibTreeSitter::TSLanguage
    getter name : String
    protected class_property loaded_languages = Hash(LibTreeSitter::TSLanguage, Language).new

    @@loaded_languages = Hash(LibTreeSitter::TSLanguage, Language).new

    # :nodoc:
    def self.new(ptr : LibTreeSitter::TSLanguage)
      @@loaded_languages[ptr]
    end

    def self.new(name : String)
      TreeSitter::Repository.load_language(name)
    end

    # :nodoc:
    def self.new(name : String, ptr : LibTreeSitter::TSLanguage)
      @@loaded_languages[ptr] ||= begin
        instance = Language.allocate
        instance.initialize(name, ptr)
        instance
      end
    end

    # :nodoc:
    protected def initialize(@name, @lang)
    end

    # Get the number of distinct node types in the language.
    def symbol_count : UInt32
      LibTreeSitter.ts_language_symbol_count(to_unsafe)
    end

    # Get the number of distinct field names in the language.
    def field_count : UInt32
      LibTreeSitter.ts_language_field_count(to_unsafe)
    end

    # Get the ABI version number for this language. This version number is used
    # to ensure that languages were generated by a compatible version of
    # Tree-sitter.
    #
    # See also `Parser#language=`.
    def abi_version : Int32
      LibTreeSitter.ts_language_version(to_unsafe).to_i
    end

    def injection_regex? : Regex?
      nil
    end

    def injection_regex : Regex
      # ameba:disable Lint/NotNil
      injection_regex?.not_nil!
    end

    def highlight_query? : Query?
      path = Repository.language_paths[@name]
      query_source = File.read(Path.new(path).join("queries", "highlights.scm"))
      Query.new(self, query_source)
    end

    def highlight_query : Query
      # ameba:disable Lint/NotNil
      highlight_query?.not_nil!
    end

    # :nodoc:
    def to_unsafe
      @lang
    end
  end
end
